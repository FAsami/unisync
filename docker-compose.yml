services:
  postgres:
    image: postgres:17.5
    container_name: unisync-postgres
    restart: unless-stopped
    networks:
      - unisync-network
    environment:
      POSTGRES_DB: unisync
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
    ports:
      - "9200:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:latest
    container_name: unisync-hasura
    restart: unless-stopped
    networks:
      - unisync-network
    ports:
      - "9203:8080"
    environment:
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/unisync
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: 123
      HASURA_GRAPHQL_AUTH_HOOK: http://host.docker.internal:9201/api/v1/auth/webhook/authorize
      HASURA_GRAPHQL_AUTH_HOOK_MODE: "POST"
      SERVER_AUTH_SECRET: auth-test-101
      SERVER_URL: http://host.docker.internal:9201/api/v1
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - hasura_metadata:/hasura-metadata
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  hasura_metadata:
    driver: local

networks:
  unisync-network:
    name: unisync-network
    driver: bridge
